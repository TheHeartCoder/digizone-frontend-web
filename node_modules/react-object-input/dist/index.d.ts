import { ReactElement } from 'react';
export interface ObjectInputProps<T> {
    renderItem: (name: string, value: T | undefined, changeName: (newName: string) => void, changeValue: (newValue: T) => void, deleteProperty: () => void) => ReactElement;
    onChange: (updater: (c: {
        [name: string]: T;
    }) => {
        [name: string]: T;
    }) => void;
    obj: {
        [name: string]: T;
    };
    renderAdd?: (addItem: () => void) => ReactElement;
    renderEmpty?: () => ReactElement;
}
export declare const ObjectInput: <T extends {}>({ obj, onChange, renderItem, renderAdd, renderEmpty }: ObjectInputProps<T>) => JSX.Element;
